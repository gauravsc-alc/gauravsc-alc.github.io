name: Generate EmailJS runtime config (manual)

# Manual workflow to generate runtime config if you need it separately.
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create runtime config file in build output (_site/js) only
        env:
          EMAILJS_PUBLIC_KEY: ${{ secrets.EMAILJS_PUBLIC_KEY }}
          EMAILJS_SERVICE_ID: ${{ secrets.EMAILJS_SERVICE_ID }}
          EMAILJS_TEMPLATE_ID: ${{ secrets.EMAILJS_TEMPLATE_ID }}
        run: |
          mkdir -p _site/js
          cat > _site/js/emailjs-config.js <<'EOF'
          // Runtime EmailJS configuration generated by CI (manual run).
          window.EMAILJS_CONFIG = {
            PUBLIC_KEY: '${EMAILJS_PUBLIC_KEY}',
            SERVICE_ID: '${EMAILJS_SERVICE_ID}',
            TEMPLATE_ID: '${EMAILJS_TEMPLATE_ID}'
          };
          EOF

      - name: Upload artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: runtime-emailjs-config
          path: _site/js/emailjs-config.js

      # Optional: Deploy to gh-pages branch
      - name: Push config to gh-pages branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git checkout --orphan gh-pages || true
          git rm -rf .
          # Copy runtime config into branch
          mkdir -p js
          cp _site/js/emailjs-config.js js/
          # force-add ignored runtime config to new branch
          git add -f js/emailjs-config.js
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "chore: deploy EmailJS runtime config" || echo "no changes to commit"
          git push --force origin gh-pages

      # Note: If you use the deploy-pages.yml workflow instead, it will handle this automatically

name: Generate EmailJS runtime config

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  generate-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create runtime config file
        env:
          EMAILJS_PUBLIC_KEY: ${{ secrets.EMAILJS_PUBLIC_KEY }}
          EMAILJS_SERVICE_ID: ${{ secrets.EMAILJS_SERVICE_ID }}
          EMAILJS_TEMPLATE_ID: ${{ secrets.EMAILJS_TEMPLATE_ID }}
        run: |
          echo "window.EMAILJS_RUNTIME_CONFIG = {" > js/emailjs-config.js
          echo "  PUBLIC_KEY: '${EMAILJS_PUBLIC_KEY//\'/\\'}'," >> js/emailjs-config.js
          echo "  SERVICE_ID: '${EMAILJS_SERVICE_ID//\'/\\'}'," >> js/emailjs-config.js
          echo "  TEMPLATE_ID: '${EMAILJS_TEMPLATE_ID//\'/\\'}'" >> js/emailjs-config.js
          echo "};" >> js/emailjs-config.js
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # force-add ignored runtime config
          git add -f js/emailjs-config.js
          git commit -m "chore: generate EmailJS runtime config from secrets" || echo "no changes to commit"

      # Option B (recommended): deploy or push generated config only to deployment branch (gh-pages)
      - name: Push config to gh-pages branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git checkout --orphan gh-pages || true
          git rm -rf .
          # Copy runtime config into branch
          mkdir -p js
          cp js/emailjs-config.js js/emailjs-config.js
          # force-add ignored runtime config to new branch
          git add -f js/emailjs-config.js
          git commit -m "chore: deploy EmailJS runtime config" || echo "no changes to commit"
          git push --force origin gh-pages

      # If you build and deploy your site in CI (Jekyll/Pages), integrate the config file into build output (_site/js/...)
      # and run your normal deployment step instead of pushing gh-pages here.
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # If you build and deploy your site in CI (Jekyll/Pages), integrate the config file into build output (_site/js/...)
      # and run your normal deployment step instead of pushing gh-pages here.

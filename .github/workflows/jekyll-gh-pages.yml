# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Add step to fix platform mismatch issue
      - name: Update Gemfile.lock for Linux platform
        run: |
          bundle lock --add-platform x86_64-linux
          bundle lock --add-platform ruby

      # Generate EmailJS config BEFORE Jekyll build
      - name: Generate EmailJS runtime config
        env:
          EMAILJS_PUBLIC_KEY: ${{ secrets.EMAILJS_PUBLIC_KEY }}
          EMAILJS_SERVICE_ID: ${{ secrets.EMAILJS_SERVICE_ID }}
          EMAILJS_TEMPLATE_ID: ${{ secrets.EMAILJS_TEMPLATE_ID }}
        run: |
          # Create js directory if it doesn't exist
          mkdir -p js
          # Write config directly to source directory so Jekyll includes it in build
          cat > js/emailjs-config.js << EOF
          // Runtime EmailJS configuration generated by CI
          window.EMAILJS_CONFIG = {
            PUBLIC_KEY: '${{ secrets.EMAILJS_PUBLIC_KEY }}',
            SERVICE_ID: '${{ secrets.EMAILJS_SERVICE_ID }}',
            TEMPLATE_ID: '${{ secrets.EMAILJS_TEMPLATE_ID }}'
          };
          EOF
          echo "Generated EmailJS config file that will be included in Jekyll build"

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
